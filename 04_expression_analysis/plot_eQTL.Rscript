#!/usr/bin/env Rscript



library(data.table)
library(foreach)
library(DESeq2)
library(cowplot)
library(doMC)
registerDoMC(cores=5)

# Get GWAS top hits


gwas <- fread('../02_gwas/true.gwas', header=T)

permutations <- lapply(c("../02_gwas/chr2.gwas","../02_gwas/chr3.gwas","../02_gwas/chrX.gwas"), function(x) fread(x))
permutations <- rbindlist(permutations)
permutations <- permutations[, .SD[which.min(V7)], by=V8]
threshold <- quantile(permutations$V7, 0.05)

gwas <- gwas[n.obs > 400 & Score.pval < threshold]
remove(permutations)
gc()

# Get expression data for all individuals

dds <- readRDS('./DE/DESeq.dds.RDS')
transf <- vst(dds)

geneNames <- rownames(assay(transf))

dat <- data.table(assay(transf))
sampleNames <- copy(colnames(dat))

dat[, FlyBaseID := geneNames]
expression <- melt(dat, measure.vars=sampleNames, variable.name="sampleID", value.name="vst_expression")
expression[, sampleID := gsub("\\.", "-", sampleID)]

if(! file.exists("gwasHits.dat")) {
  fwrite(gwas, file="gwasHits.dat", quote=F, col.names=F, row.names=F, sep="\t")
}

# suspend R, get GWAS loci from VCF
# grep -m 1 "^#CHROM" ../01_reconstructions/filtered_estimates/filtered.all.vcf > gwasLoci.vcf
# grep -f <(cut -f 1-2 gwasHits.dat | sed 's/\t/\\s/g' | sed 's/^/^/g') ../01_reconstructions/filtered_estimates/filtered.all.vcf >> gwasLoci.vcf

gwasGenotypes <- fread('gwasLoci.vcf', header=T, select=c("#CHROM","POS", gsub("\\.", "-", sampleNames)))
setnames(gwasGenotypes, "#CHROM", "CHROM")
genotypes <- melt(gwasGenotypes, measure.vars=gsub("\\.", "-", sampleNames), variable.name="sampleID", value.name="GT")
genotypes[GT == "0/0", refDosage := 2]
genotypes[GT %in% c("0/1","1/0"), refDosage := 1]
genotypes[GT == "1/1", refDosage := 0]
genotypes[GT %like% "[.]", refDosage := NA]



# Import exonic ranges from GTF file
exons <- fread('dm3.gtf', select=c(1,3,4,5,9), header=F, col.names=c("chr","type","cdsStart","cdsStop","feature"))
exons <- exons[type=="exon"]
exons <- exons[chr %in% c("chr2L","chr2R","chr3L","chr3R","chrX")]
exons[, chr := tstrsplit(chr, "chr")[2]]
exons[, AnnotationID := tstrsplit(feature, split='["]')[2]]
setnames(exons, "chr", "CHROM")
setkey(exons, CHROM, cdsStart, cdsStop)
exons[, feature := NULL]
exons <- exons[!duplicated(exons)]


FBids <- fread('dm3.GC_to_FB.txt', select=c(1,2,4), col.names=c("AnnotationID","FlyBaseID","symbol"))
setkey(FBids, AnnotationID)

exons <- merge(exons, FBids, by.x="AnnotationID", by.y="AnnotationID")
setkey(exons, CHROM, cdsStart, cdsStop)
# select FBid with greatest total read counts

# gwas
# genotypes
# exons.translated
# expression

# For each row in gwas,
#   Select neighbor gene(s) within +/- 20 kb of position
#   For neighbor_gene in neighbor_genes,
#     get expression ~ genotype + treatment + cage

distance_threshold <- 20000

setkey(expression, FlyBaseID, sampleID)
setkey(genotypes, CHROM, POS, sampleID)

#

o2 <- foreach(gwas_chr=gwas[,chr], gwas_pos=gwas[,pos], .errorhandling="remove") %do% {
  # get genes neighboring this position
  neighbor_genes <- unique(exons[CHROM==gwas_chr & (abs(cdsStart-gwas_pos) < distance_threshold)][,c("FlyBaseID","symbol")])
  o1 <- foreach(neighbor_gene = neighbor_genes[,FlyBaseID], .errorhandling="remove") %do% {
      # merge expression and genotypes at this locus
    expression_by_genotype <- merge(expression[.(neighbor_gene)], genotypes[.(gwas_chr, gwas_pos)])
    expression_by_genotype[, trt := tstrsplit(sampleID, split="[-]")[1]]
    expression_by_genotype[, Treatment := ifelse(trt=="4CB", "Pre-Starvation", "Post-Starvation")]
    expression_by_genotype[, Cage := tstrsplit(sampleID, split="[-]")[2]]

    #ggplot(expression_by_genotype, aes(x=factor(refDosage), y=vst_expression)) + geom_boxplot()


    # reg <- (lm(data=expression_by_genotype, vst_expression ~ as.factor(refDosage) + Treatment + Cage + as.factor(refDosage)*Treatment))

    #reg <- (lm(data=expression_by_genotype, vst_expression ~ (refDosage) + Treatment + Cage + (refDosage)*Treatment))
    reg <- (lm(data=expression_by_genotype, vst_expression ~ (refDosage) + Treatment + Cage))

    dt <- data.table(anova(reg), keep.rownames=T)
    # dt <- data.table(summary(reg)$coefficients)
    # dt[,"Coefficient" := row.names(summary(reg)$coefficients)]
    # dt[,"AIC" := AIC(reg)]
    # setnames(dt, c("Estimate","SE","t","P","Coefficient","AIC"))
    setnames(dt, c("coef", "df", "sumSq","meanSq","F","P"))
    dt[, "CHR" := gwas_chr]
    dt[, "POS" := gwas_pos]
    dt[, "FlyBaseID" := neighbor_gene]

    return(list(expression_by_genotype, dt))
  }

  expression_data <- rbindlist(lapply(o1, `[[`, 1))
  regressions <- rbindlist(lapply(o1, `[[`, 2))
  return(list(expression_data, regressions))
}

expression_data <- rbindlist(lapply(o2, `[[`, 1))
regressions <- rbindlist(lapply(o2, `[[`, 2))

regressions[, coef2 := as.numeric(as.factor(coef))]


ggplot(expression_data[FlyBaseID %in% regressions[coef2==2 & P < 0.05][,FlyBaseID] & ! is.na(refDosage), list("exp"=mean(vst_expression)), by=list(Treatment, refDosage, FlyBaseID)], aes(x=Treatment, y=exp, group=factor(refDosage), color=factor(refDosage))) + geom_line() + facet_grid(.~FlyBaseID)




ggplot(expression_data[FlyBaseID %in% regressions[Coefficient=="refDosage"][P < 0.05][,FlyBaseID]][!is.na(refDosage)], aes(x=factor(refDosage), y=vst_expression)) +
geom_boxplot() +
facet_grid(FlyBaseID~.) +
labs(x="Reference Allele Dosage", y="Expression (VS-Transformed)")





# for each GWAS hit:

# get individual genotype, grep ^chr\tPOS

# select genes +/- 20 kb

# model gene expression ~ genotype, cage, treatment
